# name: Python CI

# on: [push, pull_request]

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2

#     - name: Set up Python
#       uses: actions/setup-python@v2
#       with:
#         python-version: 3.x  # Adjust the Python version if needed

#     - name: Install dependencies
#       run: pip install -r requirements.txt  # Adjust to your project's requirements

#     - name: Run Unit Tests
#       run: pytest  # Adjust to your testing framework and test command

#     - name: Install Coverage
#       run: pip install coverage

#     - name: Generate Code Coverage Report
#       run: coverage run -m pytest
#       continue-on-error: true  # Continue even if tests fail

#     - name: Display Coverage Report
#       run: coverage report

#     - name: Convert Coverage to JSON
#       run: coverage json -o report/report.json  # Specify the path to the report folder and name the report file
#       continue-on-error: true  # Continue even if coverage report generation fails

#     - name: Display JSON Report
#       run: cat report/report.json

#     # - name: List Workspace Contents
#     #   run: ls -R

#     - name: Upload Code Coverage
#       uses: actions/upload-artifact@v2
#       with:
#         name: code-coverage
#         path: report/report.json  # Specify the path to the copied report file



name: Python CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x  # Adjust the Python version if needed

    - name: Install dependencies
      run: pip install -r requirements.txt  # Adjust to your project's requirements

    - name: Run Unit Tests
      run: pytest  # Adjust to your testing framework and test command

    - name: Install Coverage
      run: pip install coverage

    - name: Generate Code Coverage Report for test_calculator.py
      run: coverage run -m pytest test_calculator.py
      continue-on-error: true  # Continue even if tests fail

    - name: Display Coverage Report
      run: coverage report

    - name: Convert Coverage to JSON for test_calculator.py
      run: coverage json -o report/report.json --include=test_calculator.py
      continue-on-error: true  # Continue even if coverage report generation fails

    - name: Display JSON Report
      run: cat report/report.json

    - name: Upload Code Coverage
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage
        path: report/report.json  # Specify the path to the copied report file

    - name: Setup OPA
      id: Setup
      run: |
        curl -L -o opa https://openpolicyagent.org/downloads/v0.46.1/opa_linux_amd64_static
        chmod 755 ./opa
        sudo cp opa /usr/local/bin
        opa version

    - name: OPA check
      id: opa
      run: |  
        opa eval --format pretty --data policies/unit.rego --input report/report.json "data.play"
        if [[ ${{ steps.opa.outputs.allow }} == 'false' ]]; then
          echo "OPA check failed. Stopping the pipeline."
          exit 1
        fi

    - name: Run Python App
      run: python Calculator.py  # Adjust the command to run your Python application
